[ 4-0. Input Values ]

input 태그 안에 입력하면 뜨는 값 = value


[ 4-1. Form Submission]

username 유효성 검토

form의 기본 동작은 submit 이다!
submit은 기본적으로 엔터나 해당버튼 클릭시 값을 보내고 페이지를 새로고침한다
이 기본동작을 막아보자!

preventDefault()
    JS가 생성한 함수 호출시 브라우저가 실행하는 기본 동작을 막아주는 내장함수
    -> 예를들면 submit, button 같은 value값 전달버튼 클릭시 페이지를 새로고침 하는걸 막는다



////////////////////[ 요약 정리 ]///////////////////////

addEventListener 안에 있는 함수는 직접 실행하지 않는다.
브라우저가 실행시켜주고
브라우저에서 해당 이벤트에 대한 정보 즉, Object를 가지게 된다.
addEventListener의 함수에서 Object를에 대한 자리만 할당해주면
해당 이벤트가 발생시킨 정보들에 대한 Object들을 볼 수 있다!
이때 해당 이벤트가 가진 기본 Defualt값을 발생시키지 않기 위해선
preventDefault() 함수를 이용하여 막는다!

///////////////////////////////////////////////////////


[ 4-5. Saving Username ]

로컬저장소에 유저 이름을 저장하는 방법
아래는 그 기능을 하는 메서드다!

localStorage.setItem(key, value);
- 로컬 저장소에 해당 키와 값을 저장함
localStorage.getItem(key);
- 로컬 저장소에 해당 키에 해당되는 값을 불러옴
localStorage.removeItem(key);
- 로컬 저장소에 해당 키에 해당되는 키, 값을 삭제함


/**************************************************************************

    localStorage는 string format밖에 지원을 안한다.
    따라서 뭐든지 간에 다 string으로 전환하는데 JSON.stringify를 부러 쓰는 이유가 있다.

    예시를 들어보자
    const todo = ["hi", "hello"]
    localStorage.setItem("todo",todo)
    localStorage.getItem("todo")
    >>> "hi,hello"
    기존 리스트 형식 [a,b,c] 을 없애고 내용물 전체를 하나로 string화 시킨다!
    이러면 배열이 아니므로 JS에서 이용할 수 없다

    localStorage.setItem("todo",JSON.stringify(todo))
    localStorage.getItem("todo")
    >>> ["hi","hello"]
    리스트를 살려서 값 하나하나를 string화 시킨다!
    배열이므로 JS에서 활용 가능하다!

    
    결론적으로 JSON.stringify로 넘겨준 자료는 JSON.parse로 받아와서
    데이터 손상없이 바로 배열로 사용할 수 있는 차이다.
    만일 그냥 넘겨준 자료로 JSON.parse를 받아올시 오류가 난다.
    

**************************************************************************/

[ 4-6. Loading Username ]

로컬저장소에 저장된 유저 이름을 불러오는 방법


