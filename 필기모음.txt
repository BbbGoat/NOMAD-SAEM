[ 자바스크립트의 데이터타입 2가지 ]
string 문자
number 숫자

[ Variable 변수 ]
- var는 유동적이므로 보통 사용하지 않는다!
- var는 규칙이 없다!
- 선언후, 원하는 곳 어디든 값을 업데이트 가능하다
(재할당이 쉽다)
- var를 마구잡이 선언할 경우 변수의 역할 구분이 어렵다!
[let 변수]
- 지역변수와 전역변수 확실하게 구분해서 써준다!
[constant 상수]
- 값이 바뀌지 않는다

>>> 규칙을 알면 코드를 이해하는게 쉬워진다!

!!!! always const / sometimes let / never var !!!!
______________________________________________________________________

[ Boolean ]
불린 타입의 종류
true / false
0 -> off / 1 -> on
null
-> 아무것도 없는 상태로 채웠음을 의미
-> 변수안에 값이 없다는것을 확실히 알려줄 때 사용
undefined
-> 정의되지 않음 
-> 메모리 안에는 존재하지만 비어있다!(할당값 없음)
______________________________________________________________________

[ array 배열 ]
const arr = ["a", "b", "c", "d"];
1. 시작 끝에 대괄호 사용
2. 각각의 항목은 쉼표로 분리
항목을 나열하여 필요한 요소(elements)를 선택해 불러온다!
arr[0] -> 첫번째 요소 불러오기
(컴퓨터는 0부터 세므로 순번은 0부터 시작한다!)
push(); -> array 맨뒤에 항목 추가
!!! array의 목적 : 하나의 variable 안에 데이터의 list를 가지는 것!
______________________________________________________________________

[ object 객체의 배열 ]
1. 선언하는 방법
const player = {
    // 내부값 property
    name: "nico",
    point: 10,
    fat: true,
};
2. 호출하는 방법
    cosole.log(player.name);
    cosole.log(player["name"]);
    player.name
    ->>> console은 object! 그 object 어딘가에 있는 log!
3-1. 기존 객체에 property를 추가하는 방법
    player.lastName = "hihi";
    ->>> array와 다르게 object에서는 위와같은 간단한 선언으로 property를 추가할 수 있다!
3-2. property를 업데이트 하는 방법
    player.fat = false;
    이렇게 변경 가능하다! const 상수지만 건드린거는 property 값이다!
    player = false;
    여기서 에러가 발생!! 직접적으로 const에 선언된 player 변수를 건드리는 것이므로!
4. 이런것도 가능하다
    player.points = player.points + 15;
    산수가능!

///// 설명 ////////////////////////////////////////////////
property값을 설명과 함께 넣을 수 있는 것이 object다!
property값 설명이 어려운 array의 한계값을 보완해준다!
코드가 직관적이고 변경이 쉽다!
만약 설명이 필요없으면 array 사용!
//////////////////////////////////////////////////////////

______________________________________________________________________

[ functions part 1,2 ]
- 어떤 코드를 캡슐화해서 실행을 여러번 하게 해준다!
- 인수(argument)와 전달변수(parameter)를 이용해 함수 내로 정보를 전달한다!
- 인수의 정보를 순서대로 전달변수에 담는다!

1) 함수선언하기:
    function 함수이름(parameter1, parameter2, ...){
        실행문
    }
2) 함수호출하기 :
    함수이름(argument1, argument2, ...);

((argument 인수))
- function을 실행하는 동안 어떤 정보, 데이터를 function에게 보낼 수 있는 방법

object 안에서 사용하는 함수(익명함수!)

const player = {
    name:"nico",
    sayHello: function (parameter) {
        cosole.log("hello!" + parameter);
    }
};

console.log(player["name"]); // 아래처럼 줄여쓸 수 있다
console.log(player.name);
player.sayHello(argument); // 위와 같은 형식!

/////// 해석 ///////////////////////////////////////////////////////////////////////
. 의 의미는 찍!고! 들어간다! -> 해당태그 내부로 들어간다고 이해하면 될듯
변수 player 안의 key값 sayHello를 선택해 그 value값인 익명함수를 호출하고
거기다가 argument로 parameter를 준다!
////////////////////////////////////////////////////////////////////////////////////

_________________________________________________

[ Recap ]